{"version":3,"sources":["components/Forma/Forma.module.css","components/Forma/Forma.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Form","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","css","form","this","label","type","pattern","title","required","onChange","btn","Component","Filter","box","contact","input","ContactList","contacts","list","length","map","id","item","onClick","App","filter","changeFilter","getVisibleContacts","normalizeFilter","toLowerCase","includes","addContact","unicName","find","alert","prevState","nanoid","deleteContact","localStorage","getItem","console","log","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a332ea0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forma_form__1Pfun\",\"label\":\"Forma_label__GY3eN\",\"btn\":\"Forma_btn__URqXZ\"};","import React, { Component } from \"react\";\nimport css from \"./Forma.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      // [e.currentTarget.name]: e.currentTarget.number,\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={css.form} onSubmit={this.handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button className={css.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={css.box}>\n    <label className={css.contact}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onChange }) => {\n  return (\n    <ul className={css.list}>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <li className={css.item} key={id}>\n            {`${name}: ${number}`}\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => onChange(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Forma/Forma\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    console.log(contacts);\n\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //проверяем заполненность поля иначе зациклится компонент\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n    console.log(prevState);\n    console.log(this.state);\n  }\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    let unicName = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (unicName) {\n      alert(`${unicName.name} is already in contacts`);\n    } else {\n      // const userId = nanoid();\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { id: nanoid(), name, number }],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <section className=\"wrapper\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2 className=\"title\">Contacts</h2>\n        {this.state.contacts.length === 0 ? null : (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        <ContactList contacts={visibleContacts} onChange={this.deleteContact} />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Filter_contact__3wGNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3PH7g\",\"item\":\"ContactList_item__2bUnc\",\"btn\":\"ContactList_btn__1sN--\"};"],"sourceRoot":""}